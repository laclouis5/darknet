[net]
# Testing
#batch=1
#subdivisions=1
# Training
batch=64
subdivisions=8
width=544
height=544
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1
mixup=1
blur=10

learning_rate=0.001
burn_in=1000
max_batches = 10000

policy=sgdr
sgdr_cycle=1000
sgdr_mult=2
steps=4000,6000,8000,9000
#scales=1, 1, 0.1, 0.1

[convolutional]
batch_normalize=1
filters=16
size=3
stride=1
pad=1
activation=swish

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=swish

[maxpool]
size=2
stride=2
antialiasing=1

[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=swish

[maxpool]
size=2
stride=2
antialiasing=1

[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=swish

[maxpool]
size=2
stride=2
antialiasing=1

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=swish

[maxpool]
size=2
stride=2
antialiasing=1

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=swish

[maxpool]
size=2
stride=1

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=swish

###########

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=swish

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=swish


########### to [yolo-3]


[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=swish
assisted_excitation=4000

[upsample]
stride=2

[route]
layers = -1, 8

###########

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=swish


[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=swish

########### to [yolo-2]


[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=swish

[upsample]
stride=2

[route]
layers = -1, 6

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=swish

[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=swish

########### features of different layers


[route]
layers=2

[maxpool]
size=16
stride=16

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=swish

[route]
layers=4

[maxpool]
size=8
stride=8

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=swish

[route]
layers=4

[maxpool]
size=8
stride=4
stride_x=4
stride_y=8

[convolutional]
batch_normalize=1
filters=64
size=1
stride=2
stride_x=2
stride_y=1
pad=1
activation=swish

[route]
layers=4

[maxpool]
size=8
stride=8
stride_x=8
stride_y=4

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
stride_x=1
stride_y=2
pad=1
activation=swish

[route]
layers=4

[maxpool]
size=8
stride=8

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=swish

[route]
layers=6

[maxpool]
size=4
stride=2

[convolutional]
batch_normalize=1
filters=64
size=1
stride=2
pad=1
activation=swish

[route]
layers=6

[maxpool]
size=4
stride=2
stride_x=2
stride_y=4

[convolutional]
batch_normalize=1
filters=64
size=1
stride=2
stride_x=2
stride_y=1
pad=1
activation=swish

[route]
layers=6

[maxpool]
size=4
stride=4
stride_x=4
stride_y=2

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
stride_x=1
stride_y=2
pad=1
activation=swish

[route]
layers=8

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=swish

[route]
layers=10

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=swish

[route]
layers=-1, -3, -6, -9, -12, -15, -18, -21, -24, -27

[maxpool]
maxpool_depth=1
out_channels=64
stride=1
size=1


###########

########### [yolo-1]


##########################

[upsample]
stride=4

[route]
layers=-1,24



[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=64
activation=swish

[shortcut]
activation=leaky
from=-2

[convolutional]
size=1
stride=1
pad=1
filters=30
# filters  = (classes + 8 + 1) * <numbers in mask>    // for [Gaussian_yolo]
activation=linear

[Gaussian_yolo]
mask = 0,3
anchors = 8,8,  8,16,  16,8,  16,16,  16,32,  32,16,               32,32,  32,64,  64,32,  64,64,  64,128,  128,64,     128,128,  128,192,  192,128,  192,192,  129,256,  256,192,     192,192,  192,256,  256,192,  256,256,  256,384,  384,256,     384,384
#anchors = 7, 11,  12, 30,  26, 15,  29, 34,  18, 62,  65, 28,     42, 58,  29,106,  79, 62,  58,100, 144, 43,  45,181,    118, 94,  86,144,  73,251, 282, 70, 183,129, 130,190,       111,309, 221,214, 349,142, 170,321, 363,244, 258,345,          389,379
classes=6
num=25
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.05
random=1

[route]
layers=-6

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=1
stride_y=2

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=64
activation=swish

[shortcut]
activation=leaky
from= -2

[convolutional]
size=1
stride=1
pad=1
filters=30
# filters  = (classes + 8 + 1) * <numbers in mask>    // for [Gaussian_yolo]
activation=linear

[Gaussian_yolo]
mask = 1,4
anchors = 8,8,  8,16,  16,8,  16,16,  16,32,  32,16,               32,32,  32,64,  64,32,  64,64,  64,128,  128,64,     128,128,  128,192,  192,128,  192,192,  129,256,  256,192,     192,192,  192,256,  256,192,  256,256,  256,384,  384,256,     384,384
#anchors = 7, 11,  12, 30,  26, 15,  29, 34,  18, 62,  65, 28,     42, 58,  29,106,  79, 62,  58,100, 144, 43,  45,181,    118, 94,  86,144,  73,251, 282, 70, 183,129, 130,190,       111,309, 221,214, 349,142, 170,321, 363,244, 258,345,          389,379
classes=6
num=25
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.05
random=1



[route]
layers=-14

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=2
stride_y=1

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=64
activation=swish

[shortcut]
activation=leaky
from= -2

[convolutional]
size=1
stride=1
pad=1
filters=30
# filters  = (classes + 8 + 1) * <numbers in mask>    // for [Gaussian_yolo]
activation=linear

[Gaussian_yolo]
mask = 2,5
anchors = 8,8,  8,16,  16,8,  16,16,  16,32,  32,16,               32,32,  32,64,  64,32,  64,64,  64,128,  128,64,     128,128,  128,192,  192,128,  192,192,  129,256,  256,192,     192,192,  192,256,  256,192,  256,256,  256,384,  384,256,     384,384
#anchors = 7, 11,  12, 30,  26, 15,  29, 34,  18, 62,  65, 28,     42, 58,  29,106,  79, 62,  58,100, 144, 43,  45,181,    118, 94,  86,144,  73,251, 282, 70, 183,129, 130,190,       111,309, 221,214, 349,142, 170,321, 363,244, 258,345,          389,379
classes=6
num=25
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.05
random=1

##########################


[route]
layers=-24

[upsample]
stride=2

[route]
layers=20

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=128
activation=swish

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=128
activation=swish

[route]
layers=-1,-4

[route]
layers=-20

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=2
stride_y=1

[route]
layers=-14

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=1
stride_y=2

[route]
layers=-1,-3,-5

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=64
activation=swish

[shortcut]
activation=leaky
from=-2

[convolutional]
size=1
stride=1
pad=1
filters=30
# filters  = (classes + 8 + 1) * <numbers in mask>    // for [Gaussian_yolo]
activation=linear

[Gaussian_yolo]
mask = 6,9
anchors = 8,8,  8,16,  16,8,  16,16,  16,32,  32,16,               32,32,  32,64,  64,32,  64,64,  64,128,  128,64,     128,128,  128,192,  192,128,  192,192,  129,256,  256,192,     192,192,  192,256,  256,192,  256,256,  256,384,  384,256,     384,384
#anchors = 7, 11,  12, 30,  26, 15,  29, 34,  18, 62,  65, 28,     42, 58,  29,106,  79, 62,  58,100, 144, 43,  45,181,    118, 94,  86,144,  73,251, 282, 70, 183,129, 130,190,       111,309, 221,214, 349,142, 170,321, 363,244, 258,345,          389,379
classes=6
num=25
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.1
random=1


[route]
layers = -6

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=1
stride_y=2

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=64
activation=swish

[shortcut]
activation=leaky
from= -2

[convolutional]
size=1
stride=1
pad=1
filters=30
# filters  = (classes + 8 + 1) * <numbers in mask>    // for [Gaussian_yolo]
activation=linear

[Gaussian_yolo]
mask = 7,10
anchors = 8,8,  8,16,  16,8,  16,16,  16,32,  32,16,               32,32,  32,64,  64,32,  64,64,  64,128,  128,64,     128,128,  128,192,  192,128,  192,192,  129,256,  256,192,     192,192,  192,256,  256,192,  256,256,  256,384,  384,256,     384,384
#mask = 7,11
#anchors = 7, 11,  12, 30,  26, 15,  29, 34,  18, 62,  65, 28,     42, 58,  29,106,  79, 62,  58,100, 144, 43,  45,181,    118, 94,  86,144,  73,251, 282, 70, 183,129, 130,190,       111,309, 221,214, 349,142, 170,321, 363,244, 258,345,          389,379
classes=6
num=25
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.1
random=1


[route]
layers = -14

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=2
stride_y=1

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=64
activation=swish

[shortcut]
activation=leaky
from= -2

[convolutional]
size=1
stride=1
pad=1
filters=30
# filters  = (classes + 8 + 1) * <numbers in mask>    // for [Gaussian_yolo]
activation=linear

[Gaussian_yolo]
mask = 8,11
anchors = 8,8,  8,16,  16,8,  16,16,  16,32,  32,16,               32,32,  32,64,  64,32,  64,64,  64,128,  128,64,     128,128,  128,192,  192,128,  192,192,  129,256,  256,192,     192,192,  192,256,  256,192,  256,256,  256,384,  384,256,     384,384
#mask = 8,10
#anchors = 7, 11,  12, 30,  26, 15,  29, 34,  18, 62,  65, 28,  42, 58,  29,106,  79, 62,  58,100, 144, 43,  45,181, 118, 94,  86,144,  73,251, 282, 70, 183,129, 130,190, 111,309, 221,214, 349,142, 170,321, 363,244, 258,345, 389,379
classes=6
num=25
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.1
random=1

##########################

[route]
layers=-56

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[route]
layers=15

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=128
activation=swish

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=128
activation=swish

[route]
layers=-18

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=2
stride_y=1

[route]
layers=-12

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=1
stride_y=2

[route]
layers=-1,-3,-5,-8

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=320
activation=swish

[shortcut]
activation=leaky
from=-2

[convolutional]
size=1
stride=1
pad=1
filters=45
# filters  = (classes + 8 + 1) * <numbers in mask>    // for [Gaussian_yolo]
activation=linear

[Gaussian_yolo]
mask = 12,15,18
anchors = 8,8,  8,16,  16,8,  16,16,  16,32,  32,16,               32,32,  32,64,  64,32,  64,64,  64,128,  128,64,     128,128,  128,192,  192,128,  192,192,  129,256,  256,192,     192,192,  192,256,  256,192,  256,256,  256,384,  384,256,     384,384
#mask = 12,13,17
#anchors = 7, 11,  12, 30,  26, 15,  29, 34,  18, 62,  65, 28,  42, 58,  29,106,  79, 62,  58,100, 144, 43,  45,181, 118, 94,  86,144,  73,251, 282, 70, 183,129, 130,190, 111,309, 221,214, 349,142, 170,321, 363,244, 258,345, 389,379
classes=6
num=25
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.2
random=1


[route]
layers = -5

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=1
stride_y=2

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=64
activation=swish

[shortcut]
activation=leaky
from= -2

[convolutional]
size=1
stride=1
pad=1
filters=45
# filters  = (classes + 8 + 1) * <numbers in mask>    // for [Gaussian_yolo]
activation=linear

[Gaussian_yolo]
mask = 13,16,19
anchors = 8,8,  8,16,  16,8,  16,16,  16,32,  32,16,               32,32,  32,64,  64,32,  64,64,  64,128,  128,64,     128,128,  128,192,  192,128,  192,192,  129,256,  256,192,     192,192,  192,256,  256,192,  256,256,  256,384,  384,256,     384,384
#mask = 14,18,21
#anchors = 7, 11,  12, 30,  26, 15,  29, 34,  18, 62,  65, 28,  42, 58,  29,106,  79, 62,  58,100, 144, 43,  45,181, 118, 94,  86,144,  73,251, 282, 70, 183,129, 130,190, 111,309, 221,214, 349,142, 170,321, 363,244, 258,345, 389,379
classes=6
num=25
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.2
random=1


[route]
layers = -13

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=2
stride_y=1

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=64
activation=swish

[shortcut]
activation=leaky
from= -2

[convolutional]
size=1
stride=1
pad=1
filters=45
# filters  = (classes + 8 + 1) * <numbers in mask>    // for [Gaussian_yolo]
activation=linear

[Gaussian_yolo]
mask = 14,17,20
anchors = 8,8,  8,16,  16,8,  16,16,  16,32,  32,16,               32,32,  32,64,  64,32,  64,64,  64,128,  128,64,     128,128,  128,192,  192,128,  192,192,  129,256,  256,192,     192,192,  192,256,  256,192,  256,256,  256,384,  384,256,     384,384
#mask = 15,16,20
#anchors = 7, 11,  12, 30,  26, 15,  29, 34,  18, 62,  65, 28,  42, 58,  29,106,  79, 62,  58,100, 144, 43,  45,181, 118, 94,  86,144,  73,251, 282, 70, 183,129, 130,190, 111,309, 221,214, 349,142, 170,321, 363,244, 258,345, 389,379
classes=6
num=25
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.2
random=1

#################

[route]
layers=-86

[convolutional]
batch_normalize=1
size=1
stride=2
pad=1
filters=64
activation=swish

[route]
layers=-23

[convolutional]
batch_normalize=1
size=3
stride=2
pad=1
filters=256
activation=swish

[convolutional]
batch_normalize=1
size=1
stride=1
pad=1
filters=64
activation=swish

[route]
layers=-19

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=2
stride_y=1

[route]
layers=-13

[convolutional]
batch_normalize=1
size=3
pad=1
filters=64
activation=swish
stride_x=1
stride_y=2

[route]
layers=-1,-3,-5,-8

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=swish

[shortcut]
activation=leaky
from=-2

[convolutional]
size=1
stride=1
pad=1
filters=60
# filters  = (classes + 8 + 1) * <numbers in mask>    // for [Gaussian_yolo]
activation=linear

[Gaussian_yolo]
mask = 21,22,23,24
anchors = 8,8,  8,16,  16,8,  16,16,  16,32,  32,16,               32,32,  32,64,  64,32,  64,64,  64,128,  128,64,     128,128,  128,192,  192,128,  192,192,  129,256,  256,192,     192,192,  192,256,  256,192,  256,256,  256,384,  384,256,     384,384
#mask = 19,22,23,24
#anchors = 7, 11,  12, 30,  26, 15,  29, 34,  18, 62,  65, 28,  42, 58,  29,106,  79, 62,  58,100, 144, 43,  45,181, 118, 94,  86,144,  73,251, 282, 70, 183,129, 130,190, 111,309, 221,214, 349,142, 170,321, 363,244, 258,345, 389,379
classes=6
num=25
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.2
random=0

